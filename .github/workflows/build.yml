on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Dockerfile'
        required: true
        type: string
      workdir:
        description: 'Working directory'
        required: true
        type: string
      repository:
        description: 'Repository'
        required: true
        type: string
      ecs_service:
        description: 'ECS Service Name'
        required: true
        type: string
      ecs_cluster:
        description: 'ECS Cluster Name'
        required: true
        type: string
      ecs_task_definition:
        description: 'ECS Task Definition' #Path to ECS Task definition
        required: true
        type: string
      container_name:
        description: 'Container Name'
        required: true
        type: string
      execution_role_arn:
        description: 'ARN of Execution Role'
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  workflow-container:
    concurrency:
      group: deploy-${{ inputs.workdir }}
      cancel-in-progress: true
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log Current Directory && Verify all inputs are present
        working-directory: ${{ inputs.workdir }}
        run: |
          pwd
          ls -la
          echo "dockerfile: ${{ inputs.dockerfile }}"
          echo "workdir: ${{ inputs.workdir }}"
          echo "repository: ${{ inputs.repository }}"
          echo "ecs_service: ${{ inputs.ecs_service }}"
          echo "ecs_cluster: ${{ inputs.ecs_cluster }}"
          echo "ecs_task_definition: ${{ inputs.ecs_task_definition }}"
          echo "container_name: ${{ inputs.container_name }}"
          echo "execution_role_arn: ${{ inputs.execution_role_arn }}"
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::717942231127:role/GithubActionRole
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY:  ${{ inputs.repository }}
          IMAGE_TAG: ${{ github.sha }}
          DOCKERFILE: ${{ inputs.dockerfile }}
          WORKDIR: ${{ inputs.workdir }}
          NAME: ${{ inputs.container_name }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG $WORKDIR -f $WORKDIR/$DOCKERFILE
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ inputs.ecs_task_definition }}
          service: ${{ inputs.ecs_service }}
          cluster: ${{ inputs.ecs_cluster }}
          wait-for-service-stability: true