{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The template used to create an ECS Service from the ECS Console.",
  "Parameters": {
    "ECSClusterName": {
      "Type": "String",
      "Default": "be-cluster"
    },
    "ECSServiceName": {
      "Type": "String",
      "Default": "maker-checker"
    },
    "SecurityGroupIDs": {
      "Type": "CommaDelimitedList",
      "Default": "sg-0b8a5b568c1041ee1"
    },
    "SubnetIDs": {
      "Type": "CommaDelimitedList",
      "Default": "subnet-0b2de3582ee6cf213,subnet-0871536db911c7fce"
    },
    "VpcID": {
      "Type": "String",
      "Default": "vpc-0dfda2f28335a83f0"
    },
    "LoadBalancerName": {
      "Type": "String",
      "Default": ""
    }
  },
  "Resources": {
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": "be-cluster",
        "TaskDefinition": "arn:aws:ecs:ap-southeast-1:717942231127:task-definition/maker-checker:18",
        "LaunchType": "FARGATE",
        "ServiceName": "maker-checker",
        "SchedulingStrategy": "REPLICA",
        "DesiredCount": 2,
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": {
              "Ref": "SecurityGroupIDs"
            },
            "Subnets": {
              "Ref": "SubnetIDs"
            }
          }
        },
        "PlatformVersion": "LATEST",
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100,
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": true
          }
        },
        "DeploymentController": {
          "Type": "ECS"
        },
        "ServiceConnectConfiguration": {
          "Enabled": true,
          "Namespace": "arn:aws:servicediscovery:ap-southeast-1:717942231127:namespace/ns-pgjresmyiiwvo7m3",
          "LogConfiguration": {
            "LogDriver": "awslogs",
            "Options": {
              "awslogs-group": "/ecs/maker-checker",
              "awslogs-region": "ap-southeast-1",
              "awslogs-stream-prefix": "ecs",
              "awslogs-create-group": "true"
            },
            "SecretOptions": []
          }
        },
        "ServiceRegistries": [
          {
            "RegistryArn": "arn:aws:servicediscovery:ap-southeast-1:717942231127:service/srv-cmjls6ybipl7dqht"
          }
        ],
        "Tags": [],
        "EnableECSManagedTags": true
      }
    },
    "AutoScalingTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": "4",
        "MinCapacity": "2",
        "ResourceId": "service/be-cluster/maker-checker",
        "RoleARN": "arn:aws:iam::717942231127:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      },
      "DependsOn": [
        "ECSService"
      ]
    },
    "AutoScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "AvgCPUScaling",
        "PolicyType": "TargetTrackingScaling",
        "ResourceId": "service/be-cluster/maker-checker",
        "ScalingTargetId": {
          "Ref": "AutoScalingTarget"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "ScaleInCooldown": "300",
          "ScaleOutCooldown": "300",
          "TargetValue": "70",
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          }
        }
      }
    }
  },
  "Outputs": {
    "ClusterName": {
      "Description": "The cluster used to create the service.",
      "Value": {
        "Ref": "ECSClusterName"
      }
    },
    "ECSService": {
      "Description": "The created service.",
      "Value": {
        "Ref": "ECSService"
      }
    },
    "AutoScalingTarget": {
      "Value": {
        "Ref": "AutoScalingTarget"
      }
    },
    "AutoScalingPolicy": {
      "Value": {
        "Ref": "AutoScalingPolicy"
      }
    }
  }
}